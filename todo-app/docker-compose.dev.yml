version: '3.8'

services: 
  app:
    image: todo-frontend
    build:
      context: ./todo-frontend/ # The context will pick this directory as the "build context"
      dockerfile: ./todo-frontend/dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 3000:3000
    container_name: todo-app  

  mongo:
    image: mongo
    ports:
     - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database   
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db

  redis:
    image: "redis:alpine"
    ports:
     - 6379:6379  
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data

  server:
    image: todo-backend
    build:
       context: ./todo-backend/
       dockerfile: ./todo-backend/dev.Dockerfile
    volumes:
      - ./todo-backend/:/usr/src/app
    ports:
      - 3001:3001
    container_name: todo-server
    environment:  
      - MONGO_URL="mongodb://root:example@mongo:27017"
      - REDIS_URL=redis://redis:6379  
  debug-helper:
    image: busybox
# volumes:
#   mongo_data:

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
